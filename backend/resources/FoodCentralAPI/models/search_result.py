# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from FoodCentralAPI.models.base_model_ import Model
from FoodCentralAPI.models.food_search_criteria import FoodSearchCriteria  # noqa: F401,E501
from FoodCentralAPI.models.search_result_food import SearchResultFood  # noqa: F401,E501
from FoodCentralAPI import util


class SearchResult(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, food_search_criteria: FoodSearchCriteria=None, total_hits: int=None, current_page: int=None, total_pages: int=None, foods: List[SearchResultFood]=None):  # noqa: E501
        """SearchResult - a model defined in Swagger

        :param food_search_criteria: The food_search_criteria of this SearchResult.  # noqa: E501
        :type food_search_criteria: FoodSearchCriteria
        :param total_hits: The total_hits of this SearchResult.  # noqa: E501
        :type total_hits: int
        :param current_page: The current_page of this SearchResult.  # noqa: E501
        :type current_page: int
        :param total_pages: The total_pages of this SearchResult.  # noqa: E501
        :type total_pages: int
        :param foods: The foods of this SearchResult.  # noqa: E501
        :type foods: List[SearchResultFood]
        """
        self.swagger_types = {
            'food_search_criteria': FoodSearchCriteria,
            'total_hits': int,
            'current_page': int,
            'total_pages': int,
            'foods': List[SearchResultFood]
        }

        self.attribute_map = {
            'food_search_criteria': 'foodSearchCriteria',
            'total_hits': 'totalHits',
            'current_page': 'currentPage',
            'total_pages': 'totalPages',
            'foods': 'foods'
        }
        self._food_search_criteria = food_search_criteria
        self._total_hits = total_hits
        self._current_page = current_page
        self._total_pages = total_pages
        self._foods = foods

    @classmethod
    def from_dict(cls, dikt) -> 'SearchResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SearchResult of this SearchResult.  # noqa: E501
        :rtype: SearchResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def food_search_criteria(self) -> FoodSearchCriteria:
        """Gets the food_search_criteria of this SearchResult.


        :return: The food_search_criteria of this SearchResult.
        :rtype: FoodSearchCriteria
        """
        return self._food_search_criteria

    @food_search_criteria.setter
    def food_search_criteria(self, food_search_criteria: FoodSearchCriteria):
        """Sets the food_search_criteria of this SearchResult.


        :param food_search_criteria: The food_search_criteria of this SearchResult.
        :type food_search_criteria: FoodSearchCriteria
        """

        self._food_search_criteria = food_search_criteria

    @property
    def total_hits(self) -> int:
        """Gets the total_hits of this SearchResult.

        The total number of foods found matching the search criteria.  # noqa: E501

        :return: The total_hits of this SearchResult.
        :rtype: int
        """
        return self._total_hits

    @total_hits.setter
    def total_hits(self, total_hits: int):
        """Sets the total_hits of this SearchResult.

        The total number of foods found matching the search criteria.  # noqa: E501

        :param total_hits: The total_hits of this SearchResult.
        :type total_hits: int
        """

        self._total_hits = total_hits

    @property
    def current_page(self) -> int:
        """Gets the current_page of this SearchResult.

        The current page of results being returned.  # noqa: E501

        :return: The current_page of this SearchResult.
        :rtype: int
        """
        return self._current_page

    @current_page.setter
    def current_page(self, current_page: int):
        """Sets the current_page of this SearchResult.

        The current page of results being returned.  # noqa: E501

        :param current_page: The current_page of this SearchResult.
        :type current_page: int
        """

        self._current_page = current_page

    @property
    def total_pages(self) -> int:
        """Gets the total_pages of this SearchResult.

        The total number of pages found matching the search criteria.  # noqa: E501

        :return: The total_pages of this SearchResult.
        :rtype: int
        """
        return self._total_pages

    @total_pages.setter
    def total_pages(self, total_pages: int):
        """Sets the total_pages of this SearchResult.

        The total number of pages found matching the search criteria.  # noqa: E501

        :param total_pages: The total_pages of this SearchResult.
        :type total_pages: int
        """

        self._total_pages = total_pages

    @property
    def foods(self) -> List[SearchResultFood]:
        """Gets the foods of this SearchResult.

        The list of foods found matching the search criteria. See Food Fields below.  # noqa: E501

        :return: The foods of this SearchResult.
        :rtype: List[SearchResultFood]
        """
        return self._foods

    @foods.setter
    def foods(self, foods: List[SearchResultFood]):
        """Sets the foods of this SearchResult.

        The list of foods found matching the search criteria. See Food Fields below.  # noqa: E501

        :param foods: The foods of this SearchResult.
        :type foods: List[SearchResultFood]
        """

        self._foods = foods
