# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from FoodCentralAPI.models.base_model_ import Model
from FoodCentralAPI.models.retention_factor import RetentionFactor  # noqa: F401,E501
from FoodCentralAPI.models.survey_food_item import SurveyFoodItem  # noqa: F401,E501
from FoodCentralAPI import util


class InputFoodSurvey(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, amount: float=None, food_description: str=None, ingredient_code: int=None, ingredient_description: str=None, ingredient_weight: float=None, portion_code: str=None, portion_description: str=None, sequence_number: int=None, survey_flag: int=None, unit: str=None, input_food: SurveyFoodItem=None, retention_factor: RetentionFactor=None):  # noqa: E501
        """InputFoodSurvey - a model defined in Swagger

        :param id: The id of this InputFoodSurvey.  # noqa: E501
        :type id: int
        :param amount: The amount of this InputFoodSurvey.  # noqa: E501
        :type amount: float
        :param food_description: The food_description of this InputFoodSurvey.  # noqa: E501
        :type food_description: str
        :param ingredient_code: The ingredient_code of this InputFoodSurvey.  # noqa: E501
        :type ingredient_code: int
        :param ingredient_description: The ingredient_description of this InputFoodSurvey.  # noqa: E501
        :type ingredient_description: str
        :param ingredient_weight: The ingredient_weight of this InputFoodSurvey.  # noqa: E501
        :type ingredient_weight: float
        :param portion_code: The portion_code of this InputFoodSurvey.  # noqa: E501
        :type portion_code: str
        :param portion_description: The portion_description of this InputFoodSurvey.  # noqa: E501
        :type portion_description: str
        :param sequence_number: The sequence_number of this InputFoodSurvey.  # noqa: E501
        :type sequence_number: int
        :param survey_flag: The survey_flag of this InputFoodSurvey.  # noqa: E501
        :type survey_flag: int
        :param unit: The unit of this InputFoodSurvey.  # noqa: E501
        :type unit: str
        :param input_food: The input_food of this InputFoodSurvey.  # noqa: E501
        :type input_food: SurveyFoodItem
        :param retention_factor: The retention_factor of this InputFoodSurvey.  # noqa: E501
        :type retention_factor: RetentionFactor
        """
        self.swagger_types = {
            'id': int,
            'amount': float,
            'food_description': str,
            'ingredient_code': int,
            'ingredient_description': str,
            'ingredient_weight': float,
            'portion_code': str,
            'portion_description': str,
            'sequence_number': int,
            'survey_flag': int,
            'unit': str,
            'input_food': SurveyFoodItem,
            'retention_factor': RetentionFactor
        }

        self.attribute_map = {
            'id': 'id',
            'amount': 'amount',
            'food_description': 'foodDescription',
            'ingredient_code': 'ingredientCode',
            'ingredient_description': 'ingredientDescription',
            'ingredient_weight': 'ingredientWeight',
            'portion_code': 'portionCode',
            'portion_description': 'portionDescription',
            'sequence_number': 'sequenceNumber',
            'survey_flag': 'surveyFlag',
            'unit': 'unit',
            'input_food': 'inputFood',
            'retention_factor': 'retentionFactor'
        }
        self._id = id
        self._amount = amount
        self._food_description = food_description
        self._ingredient_code = ingredient_code
        self._ingredient_description = ingredient_description
        self._ingredient_weight = ingredient_weight
        self._portion_code = portion_code
        self._portion_description = portion_description
        self._sequence_number = sequence_number
        self._survey_flag = survey_flag
        self._unit = unit
        self._input_food = input_food
        self._retention_factor = retention_factor

    @classmethod
    def from_dict(cls, dikt) -> 'InputFoodSurvey':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The InputFoodSurvey of this InputFoodSurvey.  # noqa: E501
        :rtype: InputFoodSurvey
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this InputFoodSurvey.


        :return: The id of this InputFoodSurvey.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this InputFoodSurvey.


        :param id: The id of this InputFoodSurvey.
        :type id: int
        """

        self._id = id

    @property
    def amount(self) -> float:
        """Gets the amount of this InputFoodSurvey.


        :return: The amount of this InputFoodSurvey.
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount: float):
        """Sets the amount of this InputFoodSurvey.


        :param amount: The amount of this InputFoodSurvey.
        :type amount: float
        """

        self._amount = amount

    @property
    def food_description(self) -> str:
        """Gets the food_description of this InputFoodSurvey.


        :return: The food_description of this InputFoodSurvey.
        :rtype: str
        """
        return self._food_description

    @food_description.setter
    def food_description(self, food_description: str):
        """Sets the food_description of this InputFoodSurvey.


        :param food_description: The food_description of this InputFoodSurvey.
        :type food_description: str
        """

        self._food_description = food_description

    @property
    def ingredient_code(self) -> int:
        """Gets the ingredient_code of this InputFoodSurvey.


        :return: The ingredient_code of this InputFoodSurvey.
        :rtype: int
        """
        return self._ingredient_code

    @ingredient_code.setter
    def ingredient_code(self, ingredient_code: int):
        """Sets the ingredient_code of this InputFoodSurvey.


        :param ingredient_code: The ingredient_code of this InputFoodSurvey.
        :type ingredient_code: int
        """

        self._ingredient_code = ingredient_code

    @property
    def ingredient_description(self) -> str:
        """Gets the ingredient_description of this InputFoodSurvey.


        :return: The ingredient_description of this InputFoodSurvey.
        :rtype: str
        """
        return self._ingredient_description

    @ingredient_description.setter
    def ingredient_description(self, ingredient_description: str):
        """Sets the ingredient_description of this InputFoodSurvey.


        :param ingredient_description: The ingredient_description of this InputFoodSurvey.
        :type ingredient_description: str
        """

        self._ingredient_description = ingredient_description

    @property
    def ingredient_weight(self) -> float:
        """Gets the ingredient_weight of this InputFoodSurvey.


        :return: The ingredient_weight of this InputFoodSurvey.
        :rtype: float
        """
        return self._ingredient_weight

    @ingredient_weight.setter
    def ingredient_weight(self, ingredient_weight: float):
        """Sets the ingredient_weight of this InputFoodSurvey.


        :param ingredient_weight: The ingredient_weight of this InputFoodSurvey.
        :type ingredient_weight: float
        """

        self._ingredient_weight = ingredient_weight

    @property
    def portion_code(self) -> str:
        """Gets the portion_code of this InputFoodSurvey.


        :return: The portion_code of this InputFoodSurvey.
        :rtype: str
        """
        return self._portion_code

    @portion_code.setter
    def portion_code(self, portion_code: str):
        """Sets the portion_code of this InputFoodSurvey.


        :param portion_code: The portion_code of this InputFoodSurvey.
        :type portion_code: str
        """

        self._portion_code = portion_code

    @property
    def portion_description(self) -> str:
        """Gets the portion_description of this InputFoodSurvey.


        :return: The portion_description of this InputFoodSurvey.
        :rtype: str
        """
        return self._portion_description

    @portion_description.setter
    def portion_description(self, portion_description: str):
        """Sets the portion_description of this InputFoodSurvey.


        :param portion_description: The portion_description of this InputFoodSurvey.
        :type portion_description: str
        """

        self._portion_description = portion_description

    @property
    def sequence_number(self) -> int:
        """Gets the sequence_number of this InputFoodSurvey.


        :return: The sequence_number of this InputFoodSurvey.
        :rtype: int
        """
        return self._sequence_number

    @sequence_number.setter
    def sequence_number(self, sequence_number: int):
        """Sets the sequence_number of this InputFoodSurvey.


        :param sequence_number: The sequence_number of this InputFoodSurvey.
        :type sequence_number: int
        """

        self._sequence_number = sequence_number

    @property
    def survey_flag(self) -> int:
        """Gets the survey_flag of this InputFoodSurvey.


        :return: The survey_flag of this InputFoodSurvey.
        :rtype: int
        """
        return self._survey_flag

    @survey_flag.setter
    def survey_flag(self, survey_flag: int):
        """Sets the survey_flag of this InputFoodSurvey.


        :param survey_flag: The survey_flag of this InputFoodSurvey.
        :type survey_flag: int
        """

        self._survey_flag = survey_flag

    @property
    def unit(self) -> str:
        """Gets the unit of this InputFoodSurvey.


        :return: The unit of this InputFoodSurvey.
        :rtype: str
        """
        return self._unit

    @unit.setter
    def unit(self, unit: str):
        """Sets the unit of this InputFoodSurvey.


        :param unit: The unit of this InputFoodSurvey.
        :type unit: str
        """

        self._unit = unit

    @property
    def input_food(self) -> SurveyFoodItem:
        """Gets the input_food of this InputFoodSurvey.


        :return: The input_food of this InputFoodSurvey.
        :rtype: SurveyFoodItem
        """
        return self._input_food

    @input_food.setter
    def input_food(self, input_food: SurveyFoodItem):
        """Sets the input_food of this InputFoodSurvey.


        :param input_food: The input_food of this InputFoodSurvey.
        :type input_food: SurveyFoodItem
        """

        self._input_food = input_food

    @property
    def retention_factor(self) -> RetentionFactor:
        """Gets the retention_factor of this InputFoodSurvey.


        :return: The retention_factor of this InputFoodSurvey.
        :rtype: RetentionFactor
        """
        return self._retention_factor

    @retention_factor.setter
    def retention_factor(self, retention_factor: RetentionFactor):
        """Sets the retention_factor of this InputFoodSurvey.


        :param retention_factor: The retention_factor of this InputFoodSurvey.
        :type retention_factor: RetentionFactor
        """

        self._retention_factor = retention_factor
