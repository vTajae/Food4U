# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from FoodCentralAPI.models.base_model_ import Model
from FoodCentralAPI.models.food_attribute_food_attribute_type import FoodAttributeFoodAttributeType  # noqa: F401,E501
from FoodCentralAPI import util


class FoodAttribute(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: int=None, sequence_number: int=None, value: str=None, food_attribute_type: FoodAttributeFoodAttributeType=None):  # noqa: E501
        """FoodAttribute - a model defined in Swagger

        :param id: The id of this FoodAttribute.  # noqa: E501
        :type id: int
        :param sequence_number: The sequence_number of this FoodAttribute.  # noqa: E501
        :type sequence_number: int
        :param value: The value of this FoodAttribute.  # noqa: E501
        :type value: str
        :param food_attribute_type: The food_attribute_type of this FoodAttribute.  # noqa: E501
        :type food_attribute_type: FoodAttributeFoodAttributeType
        """
        self.swagger_types = {
            'id': int,
            'sequence_number': int,
            'value': str,
            'food_attribute_type': FoodAttributeFoodAttributeType
        }

        self.attribute_map = {
            'id': 'id',
            'sequence_number': 'sequenceNumber',
            'value': 'value',
            'food_attribute_type': 'FoodAttributeType'
        }
        self._id = id
        self._sequence_number = sequence_number
        self._value = value
        self._food_attribute_type = food_attribute_type

    @classmethod
    def from_dict(cls, dikt) -> 'FoodAttribute':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FoodAttribute of this FoodAttribute.  # noqa: E501
        :rtype: FoodAttribute
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> int:
        """Gets the id of this FoodAttribute.


        :return: The id of this FoodAttribute.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this FoodAttribute.


        :param id: The id of this FoodAttribute.
        :type id: int
        """

        self._id = id

    @property
    def sequence_number(self) -> int:
        """Gets the sequence_number of this FoodAttribute.


        :return: The sequence_number of this FoodAttribute.
        :rtype: int
        """
        return self._sequence_number

    @sequence_number.setter
    def sequence_number(self, sequence_number: int):
        """Sets the sequence_number of this FoodAttribute.


        :param sequence_number: The sequence_number of this FoodAttribute.
        :type sequence_number: int
        """

        self._sequence_number = sequence_number

    @property
    def value(self) -> str:
        """Gets the value of this FoodAttribute.


        :return: The value of this FoodAttribute.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value: str):
        """Sets the value of this FoodAttribute.


        :param value: The value of this FoodAttribute.
        :type value: str
        """

        self._value = value

    @property
    def food_attribute_type(self) -> FoodAttributeFoodAttributeType:
        """Gets the food_attribute_type of this FoodAttribute.


        :return: The food_attribute_type of this FoodAttribute.
        :rtype: FoodAttributeFoodAttributeType
        """
        return self._food_attribute_type

    @food_attribute_type.setter
    def food_attribute_type(self, food_attribute_type: FoodAttributeFoodAttributeType):
        """Sets the food_attribute_type of this FoodAttribute.


        :param food_attribute_type: The food_attribute_type of this FoodAttribute.
        :type food_attribute_type: FoodAttributeFoodAttributeType
        """

        self._food_attribute_type = food_attribute_type
